//
//  SkeletonView.swift
//  BakeRoad
//
//  Created by Ïù¥ÌòÑÌò∏ on 8/20/25.
//

import SwiftUI

// MARK: - Shimmer Effect
struct ShimmerEffect: ViewModifier {
    @State private var phase: CGFloat = 0
    
    func body(content: Content) -> some View {
        content
            .overlay(
                LinearGradient(
                    gradient: Gradient(colors: [
                        Color.white.opacity(0),
                        Color.white.opacity(0.4),
                        Color.white.opacity(0)
                    ]),
                    startPoint: .leading,
                    endPoint: .trailing
                )
                .rotationEffect(.degrees(20))
                .offset(x: phase)
                .animation(
                    .linear(duration: 1.5)
                    .repeatForever(autoreverses: false),
                    value: phase
                )
            )
            .onAppear {
                phase = 300
            }
    }
}

extension View {
    func shimmer() -> some View {
        self.modifier(ShimmerEffect())
    }
}

// MARK: - Basic Skeleton Components
struct SkeletonBox: View {
    let width: CGFloat?
    let height: CGFloat
    let cornerRadius: CGFloat
    
    init(width: CGFloat? = nil, height: CGFloat, cornerRadius: CGFloat = 8) {
        self.width = width
        self.height = height
        self.cornerRadius = cornerRadius
    }
    
    var body: some View {
        Rectangle()
            .fill(Color.gray50)
            .frame(width: width, height: height)
            .cornerRadius(cornerRadius)
            .shimmer()
    }
}

// MARK: - Home Skeleton Views
struct SkeletonHomeView: View {
    var body: some View {
        ScrollView(.vertical, showsIndicators: false) {
            VStack(alignment: .leading) {
                // ÎÇ¥ Ï∑®Ìñ• Ï∂îÏ≤ú ÎπµÏßë ÏÑπÏÖò
                SkeletonBakerySection(title: "ü•® ÎÇ¥ Ï∑®Ìñ• Ï∂îÏ≤ú ÎπµÏßë")
                
                // Hot ÎπµÏßë ÏÑπÏÖò  
                SkeletonBakerySection(title: "üî• HotÌïú ÎπµÏßë Î™®Ïùå")
                    .padding(.top, 40)
                
                // Í¥ÄÍ¥ëÏßÄ ÏÑπÏÖò
                SkeletonTourSection()
                    .padding(.top, 40)
            }
        }
        .padding(.bottom, 28)
    }
}

struct SkeletonBakerySection: View {
    let title: String
    
    var body: some View {
        VStack(alignment: .leading, spacing: 0) {
            // Ìó§Îçî
            HStack {
                SkeletonBox(width: 160, height: 24, cornerRadius: 4)
                Spacer()
                SkeletonBox(width: 60, height: 20, cornerRadius: 4)
            }
            .padding(.horizontal, 16)
            
            // Í∞ÄÎ°ú Ïä§ÌÅ¨Î°§ Ïπ¥ÎìúÎì§
            ScrollView(.horizontal, showsIndicators: false) {
                HStack(spacing: 10) {
                    ForEach(0..<5, id: \.self) { _ in
                        SkeletonBakeryCard()
                    }
                }
                .padding(.horizontal, 16)
            }
            .padding(.top, 16)
        }
    }
}

struct SkeletonBakeryCard: View {
    var body: some View {
        VStack(alignment: .leading, spacing: 8) {
            // Ïù¥ÎØ∏ÏßÄ
            SkeletonBox(width: 140, height: 100, cornerRadius: 12)
            
            // Ï†úÎ™©
            SkeletonBox(width: 120, height: 16, cornerRadius: 4)
            
            // Î∂ÄÏ†úÎ™©
            SkeletonBox(width: 100, height: 14, cornerRadius: 4)
            
            // ÌèâÏ†ê/Í±∞Î¶¨ Ï†ïÎ≥¥
            HStack {
                SkeletonBox(width: 40, height: 12, cornerRadius: 4)
                Spacer()
                SkeletonBox(width: 50, height: 12, cornerRadius: 4)
            }
        }
        .frame(width: 140)
    }
}

struct SkeletonTourSection: View {
    var body: some View {
        VStack(alignment: .leading, spacing: 0) {
            // Ìó§Îçî
            SkeletonBox(width: 180, height: 24, cornerRadius: 4)
                .padding(.horizontal, 16)
            
            // Ïπ¥ÌÖåÍ≥†Î¶¨ ÏÑ†ÌÉù
            ScrollView(.horizontal, showsIndicators: false) {
                HStack(spacing: 8) {
                    ForEach(0..<4, id: \.self) { _ in
                        SkeletonBox(width: 60, height: 32, cornerRadius: 16)
                    }
                }
                .padding(.horizontal, 16)
            }
            .padding(.top, 12)
            
            // ÏÑ∏Î°ú Ïä§ÌÅ¨Î°§ Ïπ¥ÎìúÎì§
            VStack(spacing: 20) {
                ForEach(0..<3, id: \.self) { _ in
                    SkeletonTourCard()
                }
            }
            .padding(.horizontal, 16)
            .padding(.top, 20)
        }
    }
}

struct SkeletonTourCard: View {
    var body: some View {
        HStack(spacing: 12) {
            // Ïù¥ÎØ∏ÏßÄ
            SkeletonBox(width: 80, height: 80, cornerRadius: 12)
            
            VStack(alignment: .leading, spacing: 8) {
                // Ï†úÎ™©
                SkeletonBox(width: 200, height: 18, cornerRadius: 4)
                
                // Ï£ºÏÜå
                SkeletonBox(width: 160, height: 14, cornerRadius: 4)
                
                // Ïπ¥ÌÖåÍ≥†Î¶¨
                SkeletonBox(width: 80, height: 20, cornerRadius: 10)
            }
            
            Spacer()
        }
        .frame(maxWidth: .infinity, alignment: .leading)
    }
}
